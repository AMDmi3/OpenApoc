language: cpp
sudo: required
dist: bionic

cache: ccache

#compiler:
#  - gcc
#  - clang

matrix:
  include:
    - os: linux
      env:
        - MATRIX_ENV="PASS=build CXX='g++-9' CC='gcc-9' BUILD_TYPE=Quick"
    - os: linux
      env:
        - MATRIX_ENV="PASS=build CXX='clang++-8' CC='clang-8' BUILD_TYPE=sanitize"
    - os: linux
      env:
        - MATRIX_ENV="PASS=lint CLANG_FORMAT=clang-format-8"

# Passes todo:
#  - osx
#  - linux sanitize
#  - linux static analysis (clang-tidy?)

before_install:
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
  - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
  - sudo add-apt-repository 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-8 main' -y
  - sudo apt-get update -q
  - sudo apt-get install g++-9 clang-8 clang-format-8 -y
  - eval "${MATRIX_ENV}"
  - env
  - if [ "$TRAVIS_OS_NAME" = "linux" -a "$PASS" = "build" ]; then ./tools/travis-scripts/build_prepare_linux.sh; fi
  - ${CXX} --version
  - ${CC} --version


before_script:
  - export CFLAGS="-Wall -Wextra" CXXFLAGS="-Wall -Wextra"
  - if [ "$PASS" = "build" ]; then $(which time) cmake . -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCLANG_TIDY=clang-tidy-8 -DCLANG_FORMAT=clang-format-8 -DENABLE_TESTS=ON -DCMAKE_C_FLAGS="${CFLAGS}" -DCMAKE_CXX_FLAGS="${CXXFLAGS}"; fi


script:
# Create the GameState as that triggers the generated source commands
  - if [ "$PASS" = "build" ]; then echo "Building revision $(git describe --tags --all --long --always)"; $(which time) make -j2 && `which time` ctest -V -j 2; fi
  - if [ "$PASS" = "lint" ]; then echo "Linting range ${TRAVIS_COMMIT_RANGE}"; CLANG_FORMAT=${CLANG_FORMAT} ./tools/lint.sh ${TRAVIS_COMMIT_RANGE}; fi
